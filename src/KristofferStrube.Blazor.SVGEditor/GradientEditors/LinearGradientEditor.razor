<StripedLine Color="grey" From="LinearPoint1" To="LinearPoint2" />

<ContextMenuTrigger MenuId="SVGMenu" WrapperTag="g" Data=@LinearGradient>
    <Anchor Position="LinearPoint1" RingColor="black" OnPointerDown="e => GradientEndClicked(e, -1)" />
    <Anchor Position="LinearPoint2" RingColor="black" OnPointerDown="e => GradientEndClicked(e, -2)" />
</ContextMenuTrigger>

@foreach (var stop in LinearGradient.Stops)
{
    <ContextMenuTrigger MenuId="SVGMenu" WrapperTag="g" Data=@stop>
        <Anchor @key=stop.Key Position="Pos(stop)" MiddleColor="@stop.StopColor" RingColor="black" OnPointerDown="_ => StopClicked(stop)" />
    </ContextMenuTrigger>
}

@code {
    private (double x, double y) Pos(Stop stop) =>
    (
            EditingShape.BoundingBox.X + ((stop.Offset * LinearGradient.X2 + (1 - stop.Offset) * LinearGradient.X1) * EditingShape.BoundingBox.Width),
            EditingShape.BoundingBox.Y + ((stop.Offset * LinearGradient.Y2 + (1 - stop.Offset) * LinearGradient.Y1) * EditingShape.BoundingBox.Height)
        );

    private (double x, double y) LinearPoint1 => (EditingShape.BoundingBox.X + LinearGradient.X1 * EditingShape.BoundingBox.Width, EditingShape.BoundingBox.Y + LinearGradient.Y1 * EditingShape.BoundingBox.Height);
    private (double x, double y) LinearPoint2 => (EditingShape.BoundingBox.X + LinearGradient.X2 * EditingShape.BoundingBox.Width, EditingShape.BoundingBox.Y + LinearGradient.Y2 * EditingShape.BoundingBox.Height);

    [Parameter]
    public LinearGradient LinearGradient { get; set; }

    [Parameter]
    public Shape EditingShape { get; set; }

    public void StopClicked(Stop stop)
    {
        LinearGradient.SVG.EditGradient = LinearGradient;
        LinearGradient.EditingShape = EditingShape;
        LinearGradient.CurrentStop = LinearGradient.Stops.IndexOf(stop);
    }

    public void GradientEndClicked(PointerEventArgs eventArgs, int end)
    {
        if (eventArgs.Button is 2)
        {
            return;
        }
        LinearGradient.SVG.EditGradient = LinearGradient;
        LinearGradient.EditingShape = EditingShape;
        LinearGradient.CurrentStop = end;
    }
}
