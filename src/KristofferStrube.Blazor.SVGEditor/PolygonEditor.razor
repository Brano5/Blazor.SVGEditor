<ContextMenuTrigger MenuId="SVGMenu" WrapperTag="g" Data=@Polygon>
    <g transform="translate(@Polygon.SVG.Translate.x.AsString() @Polygon.SVG.Translate.y.AsString()) scale(@Polygon.SVG.Scale.AsString())">
        <polygon points="@Polygon.Element.GetAttribute("points")" fill="@Polygon.Fill" stroke="@Polygon.Stroke" stroke-width="@Polygon.StrokeWidth" @onmousedown="Select">
        </polygon>
    </g>
    @if (Polygon.Selected)
    {
        @for (int i = 0; i < Polygon.Points.Count(); i++)
        {
            var j = i;
            <PrimaryAnchor OnMouseDown="() => AnchorSelect(j)" Position=Polygon.Points[i] />
        }
    }
</ContextMenuTrigger>


@code {
    [Parameter]
    public Polygon Polygon { get; set; }

    public void AnchorSelect(int j)
    {
        if (Polygon.EditMode != EditMode.Add)
        {
            Polygon.CurrentAnchor = j;
            Polygon.EditMode = EditMode.MoveAnchor;
        }
    }

    public void Select(MouseEventArgs eventArgs)
    {
        if (Polygon.SVG.CurrentShape == null || Polygon.SVG.CurrentShape.EditMode == EditMode.None)
        {
            Polygon.SVG.CurrentShape = Polygon;
            Polygon.Panner = Polygon.SVG.LocalDetransform((eventArgs.OffsetX, eventArgs.OffsetY));
            Polygon.EditMode = EditMode.Move;
        }
    }

    protected override bool ShouldRender()
    {
        var StateRepresentation = Polygon.StateRepresentation;
        if (Polygon._StateRepresentation != StateRepresentation)
        {
            Polygon._StateRepresentation = StateRepresentation;
            return true;
        }
        return false;
    }
}
