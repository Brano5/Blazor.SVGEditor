<circle cx=@X cy=@Y r="5" stroke-width="@((CircleThickness+2).AsString())" stroke="white" fill="transparent" style="pointer-events:none;" />
<circle cx=@X cy=@Y r="5" stroke-width="@CircleThickness.AsString()" stroke="@Color" fill="transparent" @onpointerdown=OnPointerDown />

@code {
    [Parameter]
    public EventCallback<PointerEventArgs> OnPointerDown { get; set; }

    [Parameter, EditorRequired]
    public (double x, double y) Position { get; set; }

    [Parameter, EditorRequired]
    public string Color { get; set; }

    [Parameter]
    public double CircleThickness { get; set; } = 2;

    [CascadingParameter]
    protected SVG SVG { get; set; }

	protected string X => SVG.LocalTransform(Position).x.AsString();

	protected string Y => SVG.LocalTransform(Position).y.AsString();

    private string _State { get; set; }

    private string State => string.Join("-", new string[] { Position.x.ToString(), Position.y.ToString(), SVG.Scale.ToString(), SVG.Translate.x.ToString(), SVG.Translate.y.ToString() });

    protected override bool ShouldRender()
    {
        if (_State != State)
        {
            _State = State;
            return true;
        }
        return false;
    }
}
