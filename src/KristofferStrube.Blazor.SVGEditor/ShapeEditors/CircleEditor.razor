@inherits ShapeEditor<Circle>

<ContextMenuTrigger MenuId="SVGMenu" WrapperTag="g" Data=@SVGElement MouseButtonTrigger="SVGElement.ShouldTriggerContextMenu ? MouseButtonTrigger.Right : (MouseButtonTrigger)4">
    <g transform="translate(@SVGElement.SVG.Translate.x.AsString() @SVGElement.SVG.Translate.y.AsString()) scale(@SVGElement.SVG.Scale.AsString())">
        <circle @ref=ElementReference
        @onfocusin="FocusElement"
        @onfocusout="UnfocusElement"
        @onpointerdown="SelectAsync"
        @onkeyup="KeyUp" tabindex="@(SVGElement.IsChildElement ? -1 : 0)"
                cx=@SVGElement.Cx.AsString()
                cy=@SVGElement.Cy.AsString()
                r=@SVGElement.R.AsString()
                stroke="@SVGElement.Stroke"
                stroke-width="@SVGElement.StrokeWidth"
                stroke-linecap="@SVGElement.StrokeLinecap.AsString()"
                stroke-linejoin="@SVGElement.StrokeLinejoin.AsString()"
                stroke-dasharray="@SVGElement.StrokeDasharray"
                stroke-dashoffset="@SVGElement.StrokeDashoffset.AsString()"
                fill="@SVGElement.Fill">
            @foreach (BaseAnimate animate in SVGElement.AnimationElements)
            {
                var Parameters = new Dictionary<string, object> { { "SVGElement", animate } };
                <DynamicComponent Type=animate.Presenter Parameters=Parameters />
            }
        </circle>
    </g>
    @if (SVGElement.Selected && SVGElement.SVG.EditMode != EditMode.Add)
    {
        <Anchor RingColor="black" OnPointerDown="() => AnchorSelect(0)" Position="(SVGElement.Cx + SVGElement.R, SVGElement.Cy)" />
        <Anchor RingColor="black" OnPointerDown="() => AnchorSelect(1)" Position="(SVGElement.Cx - SVGElement.R, SVGElement.Cy)" />
        <Anchor RingColor="black" OnPointerDown="() => AnchorSelect(2)" Position="(SVGElement.Cx, SVGElement.Cy + SVGElement.R)" />
        <Anchor RingColor="black" OnPointerDown="() => AnchorSelect(3)" Position="(SVGElement.Cx, SVGElement.Cy - SVGElement.R)" />
    }
</ContextMenuTrigger>