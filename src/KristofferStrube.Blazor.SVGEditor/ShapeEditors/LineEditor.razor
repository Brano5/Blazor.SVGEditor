@inherits ShapeEditor<Line>

<ContextMenuTrigger MenuId="SVGMenu" WrapperTag="g" Data=@SVGElement StopPropagation=@(!SVGElement.IsChildElement)>
    <g transform="translate(@SVGElement.SVG.Translate.x.AsString() @SVGElement.SVG.Translate.y.AsString()) scale(@SVGElement.SVG.Scale.AsString())">
        <line @ref=ElementReference
        @onfocusin="FocusElement"
        @onfocusout="UnfocusElement"
        @onpointerdown="SelectAsync"
        @onkeyup="KeyUp"
              tabindex="@(SVGElement.IsChildElement ? -1 : 0)"
              x1=@SVGElement.X1.AsString()
              y1=@SVGElement.Y1.AsString()
              x2=@SVGElement.X2.AsString()
              y2=@SVGElement.Y2.AsString()
              stroke="@SVGElement.Stroke"
              stroke-width="@SVGElement.StrokeWidth"
              stroke-dasharray="@SVGElement.StrokeDasharray"
              stroke-dashoffset="@SVGElement.StrokeDashoffset.AsString()"
              fill="@SVGElement.Fill">
            @foreach (BaseAnimate animate in SVGElement.AnimationElements)
            {
                var Parameters = new Dictionary<string, object> { { "SVGElement", animate } };
                <DynamicComponent Type=animate.Presenter Parameters=Parameters />
            }
        </line>
    </g>
    @if (SVGElement.Selected && SVGElement.SVG.EditMode != EditMode.Add)
    {
        <Anchor RingColor="black" OnPointerDown="() => AnchorSelect(0)" Position="(SVGElement.X1, SVGElement.Y1)" />
        <Anchor RingColor="black" OnPointerDown="() => AnchorSelect(1)" Position="(SVGElement.X2, SVGElement.Y2)" />
    }
</ContextMenuTrigger>