@inherits ShapeEditor<G>

<ContextMenuTrigger MenuId="SVGMenu" WrapperTag="g" Data=@SVGElement MouseButtonTrigger="SVGElement.ShouldTriggerContextMenu ? MouseButtonTrigger.Right : (MouseButtonTrigger)4">
    <g @ref=ElementReference
    @onfocusin="FocusElement"
    @onfocusout="UnfocusElement"
    @onpointerdown="SelectAsync"
    @onkeyup="KeyUp"
       stroke="@SVGElement.Stroke"
       stroke-width="@SVGElement.StrokeWidth"
       stroke-linecap="@SVGElement.StrokeLinecap.AsString()"
       stroke-linejoin="@SVGElement.StrokeLinejoin.AsString()"
       stroke-dasharray="@SVGElement.StrokeDasharray"
       stroke-dashoffset="@SVGElement.StrokeDashoffset.AsString()"
       fill="@SVGElement.Fill"
       tabindex="@(SVGElement.IsChildElement ? -1 : 0)">
        @foreach (ISVGElement child in SVGElement.ChildShapes)
        {
            var Parameters = new Dictionary<string, object> { { "SVGElement", child } };
            <DynamicComponent Type=child.Presenter Parameters=Parameters />
        }
        @foreach (BaseAnimate animate in SVGElement.AnimationElements)
        {
            var Parameters = new Dictionary<string, object> { { "SVGElement", animate } };
            <DynamicComponent Type=animate.Presenter Parameters=Parameters />
        }
    </g>
    @if (SVGElement.Selected)
    {
        // We parse an Action that does nothing because we havn't implemented scaling for groups yet.
        <BoxScaler Box=SVGElement.BoundingBox AnchorOnPointerDown="(_, _) => {}" />
    }
</ContextMenuTrigger>