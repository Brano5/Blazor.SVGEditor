<line x1=@SVGEditor.LocalTransform(From).x.AsString() y1=@SVGEditor.LocalTransform(From).y.AsString() x2=@SVGEditor.LocalTransform(To).x.AsString() y2=@SVGEditor.LocalTransform(To).y.AsString() class="@NonOffsetClasses" />
<line x1=@SVGEditor.LocalTransform(From).x.AsString() y1=@SVGEditor.LocalTransform(From).y.AsString() x2=@SVGEditor.LocalTransform(To).x.AsString() y2=@SVGEditor.LocalTransform(To).y.AsString() class="@OffsetClasses" />

@code {
    [Parameter, EditorRequired]
    public (double x, double y) From { get; set; }

    [Parameter, EditorRequired]
    public (double x, double y) To { get; set; }

    [Parameter]
    public MarkerType MarkerType { get; set; } = MarkerType.Primary;

    [CascadingParameter]
    public required SVGEditor SVGEditor { get; set; }

    protected string NonOffsetClasses => "line-non-offset"
    + MarkerType switch
    {
        MarkerType.Primary => " line-primary",
        MarkerType.Secondary => " line-secondary",
        MarkerType.Opportunity => " line-opportunity",
        var value => " line-custom-" + (int)value
    };

    protected string OffsetClasses => "line-offset";
}
