@page "/Save"
@using System.Reactive.Subjects;
@using System.Reactive.Linq;
@using KristofferStrube.Blazor.FileAPI;
@inject IURLServiceInProcess URL
@inject IJSRuntime JSRuntime

<PageTitle>Save SVG with SVGEditor</PageTitle>

@if (SaveLink is null)
{
    <buttton class="btn btn-warning btn-md" @onclick="GenerateSaveLink">Generate Save Link</buttton>
}
else
{
    <a download="BlazorSVG.svg" href="@SaveLink"><button disabled="@(SaveLink is null)" @onclick="LinkPressed" class="btn btn-success btn-md">Save</button></a>
}
<br />
<textarea @bind="Input" @bind:event="oninput" style="width:100%;height:15vh;" />
<div style="height:75vh">
    <SVGEditor @ref=@SVG Input=@Input InputUpdated="(string s) => { Input = s; StateHasChanged(); }" SelectionMode="SelectionMode.WindowSelection" />
</div>

@code {
    public required SVGEditor SVG;
    protected string Input = @"<path d=""M 250 170 c -39 37 -111 35 -136 -1 s -14 -74 2 -93 s 43 -28 63 -27 s 51 -2 67 -23 c -6 18 -7 18 -12 33 c 28 -8 37 -12 52 -43 c 28 49 1 96 -20 120 s -47 33 -84 36 s -58 -23 -57 -53 s 29 -46 51 -46 s 46 24 47 45 s -8 20 -12 20 s -10 -2 -10 -22 s -2 -26 -18 -27 s -43 10 -42 30 s 12 33 29 34 s 18 -5 23 -12 c 9 15 20 10 27 8 s 18 -17 15 -40 s -36 -49 -59 -49 s -65 17 -66 63 s 51 89 138 45 z m -61 -46 v -20 h -20 c -10 0 -18 5 -17 20 s 10 15 15 16 s 22 0 22 -15 z"" fill=""purple""></path>";
    protected string? SaveLink;

    private async Task GenerateSaveLink()
    {
        if (SVG is not null)
        {
            var shapes = SVG.Elements
                .Where(e => e is Shape)
                .Select(e => (Shape)e).ToArray();
            var minX = shapes.Min(s => s.SelectionPoints.Min(p => p.x));
            var minY = shapes.Min(s => s.SelectionPoints.Min(p => p.y));
            var maxX = shapes.Max(s => s.SelectionPoints.Max(p => p.x));
            var maxY = shapes.Max(s => s.SelectionPoints.Max(p => p.y));
            var width = maxX - minX;
            var height = maxY - minY;

            Blob blob = await Blob.CreateAsync(
                JSRuntime,
                new List<BlobPart>() {
                    $@"<svg xmlns=""http://www.w3.org/2000/svg"" viewBox=""{(minX - 10).AsString()} {(minY - 10).AsString()} {(width + 20).AsString()} {(height + 20).AsString()}"" width=""400"" height=""400"">{Input}</svg>" 
                }
            );
            SaveLink = URL.CreateObjectURL(blob);
        }
    }

    private void LinkPressed()
    {
        SaveLink = null;
    }
}
